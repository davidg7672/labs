phat1 <- x1 / n1
n2 <- 127
x2 <- 74
phat2 <- x2/ n2
ppooled <- (x1 + x2) / (phat1 + phat2)
ppooled <- (x1 + x2) / (n1 + n2)
rm(ppooled)
se <- sqrt(ppooled * (1 - ppool) * (1/n1 + 1/n2))
n1 <- 66
x1 <- 31
phat1 <- x1 / n1
n2 <- 127
x2 <- 74
phat2 <- x2 / n2
ppool <- (x1 + x2) / (n1 + n2)
se <- sqrt(ppool * (1 - ppool) * (1/n1 + 1/n2))
z <- ((phat1 - phat2) - 0) / se
# this is for two tailed
# p value = 2 * p(phat1 - phat2 ≤ z)
p_value <- 2 * pnorm(z)
# proportion p is people who choose Tim on the left
# null        alternative
# h_0: = 0.5, h_a: ≠ 0.5
h_0 <- 0.5
p <- 0.5
n = 46
# step 1
# checking conditions for clt
np = n * 0.5
n * (1 - p)
# step 2
# finding se and z
p_hat <- 36 / n
p_0 <- 0.5
se <- sqrt((p_0 * (1 - p_0)) / n)
z <- (p_hat - p_0) / se
# step 3
p_val <- 2 * (1 - pnorm(z))
# proportion p is people who choose Tim on the left
# null        alternative
# h_0: = 0.5, h_a: ≠ 0.5
h_0 <- 0.5
p <- 0.5
n = 46
# step 1
# checking conditions for clt
np = n * 0.5
n * (1 - p)
# step 2
# finding se and z
p_hat <- 36 / n
p_0 <- 0.5
se <- sqrt((p_0 * (1 - p_0)) / n)
z <- (p_hat - p_0) / se
# step 3
# computing p value
p_val <- 2 * (1 - pnorm(z))
# webwork 08 problem 2
# one proportion hyp tset
n = 130
phat = 0.78
# webwork 08 problem 2
# one proportion hyp tset
n = 130
phat = 0.78
p0 = 0.5
se = sqrt(p0 * (1 -p0)/n)
# webwork 08 problem 2
# one proportion hyp tset
n = 130
phat = 0.78
p0 = 0.5
se = sqrt(p0 * (1 -p0)/n)
# webwork 08 problem 2
# one proportion hyp tset
n = 130
phat = 0.78
p0 = 0.5
se = sqrt(p0 * (1 -p0)/n)
# webwork 08 problem 2
# one proportion hyp tset
n = 130
phat = 0.78
p0 = 0.5
se = sqrt(p0 * (1 -p0)/n)
z = (phat - p0) / se
zcrit = qnorm(1-alpha)
alpha = 0.01
zcrit = qnorm(1-alpha)
library(NHANES)
library(tidyverse)
library(ggplot2)
library(plotly)
nhanes <- NHANES %>%
select(Age, Education, BPSysAve, HHIncomeMid, Race1, SurveyYr, Gender) %>%
filter(!is.na(Age), !is.na(Education), !is.na(BPSysAve), !is.na(HHIncomeMid)) %>%
mutate(Education = factor(Education, ordered = TRUE))
library(NHANES)
library(tidyverse)
library(NHANES)
install.packes("NHANES")
install.packes(NHANES)
install.packages("NHANES")
library(NHANES)
library(tidyverse)
library(ggplot2)
library(plotly)
nhanes <- NHANES %>%
select(Age, Education, BPSysAve, HHIncomeMid, Race1, SurveyYr, Gender) %>%
filter(!is.na(Age), !is.na(Education), !is.na(BPSysAve), !is.na(HHIncomeMid)) %>%
mutate(Education = factor(Education, ordered = TRUE))
hist(nhanes$BPSysAve)
#### Interaction: Race and Gender
means <- nhanes |>
group_by(Gender, Race1) |>
summarize(bp = mean(BPSysAve))
summary(lm(BPSysAve ~ Gender*Race1, data = nhanes))
ggplot(data = nhanes) +
geom_point(aes(x = Age, y = BPSysAve, color = Gender)) +
theme_classic()
int1 <- lm(BPSysAve ~ Age + Gender, data = nhanes)
summary(int1)
int2 <- lm(BPSysAve ~ Age + Gender + Age*Gender, data = nhanes)
prediction_grid <- expand.grid(
Age = seq(min(nhanes$Age), max(nhanes$Age), by = 1),
Gender = c("male", "female")
)
# Get predicted BP from both models
prediction_grid$BP_no_interaction <- predict(int1, newdata = prediction_grid)
prediction_grid$BP_with_interaction <- predict(int2, newdata = prediction_grid)
ggplot(prediction_grid, aes(x = Age, y = BP_no_interaction, color = Gender)) +
geom_line(linewidth = 1.2) +
labs(title = "No Interaction", x = "Age", y = "BP") +
theme_minimal()
ggplot(prediction_grid, aes(x = Age, y = BP_with_interaction, color = Gender)) +
geom_line(linewidth = 1.2) +
labs(title = "With Interaction", x = "Age", y = "BP") +
theme_minimal()
### Interaction: Income and Age
ggplot(data = nhanes) +
geom_point(aes(x = Age, y = HHIncomeMid, color = BPSysAve), position = "jitter") +
scale_color_gradient(name = "BP", low = "blue", high = "yellow", trans = "log") +
theme_minimal()
int3 <- lm(BPSysAve ~ Age*HHIncomeMid, data= nhanes)
summary(int3)
predict(int3, data.frame(Age = 30, HHIncomeMid = 30000))
predict(int3, data.frame(Age = 30, HHIncomeMid = 100000))
predict(int3, data.frame(Age = 60, HHIncomeMid = 30000))
predict(int3, data.frame(Age = 60, HHIncomeMid = 100000))
predict(int3, data.frame(Age = 90, HHIncomeMid = 30000))
predict(int3, data.frame(Age = 90, HHIncomeMid = 100000))
# Create a grid of values
age_seq <- seq(min(nhanes$Age), max(nhanes$Age), by = 1)
inc_seq <- unique(nhanes$HHIncomeMid)
# Expand grid
prediction_grid <- expand.grid(
Age = age_seq,
HHIncomeMid = inc_seq
)
# Predict BP
prediction_grid$SystolicBP <- predict(int3, newdata = prediction_grid)
matrix_BP <- matrix(prediction_grid$SystolicBP, nrow = length(age_seq), ncol = length(inc_seq))
plot_ly(prediction_grid,
x = ~Age,
y = ~HHIncomeMid,
z = ~SystolicBP,
type = "scatter3d",
mode = "lines",
color = ~HHIncomeMid,
line = list(width = 6)) %>%
layout(scene = list(
xaxis = list(title = "Age"),
yaxis = list(title = "Income Level"),
zaxis = list(title = "Predicted Systolic BP")
))
ggplot(nhanes[nhanes$HHIncomeMid %in% c(30000, 87500, 100000),]) +
geom_smooth(aes(x = Age, y = BPSysAve, color = as.factor(HHIncomeMid)), method = "lm", se = F) +
theme_classic()
plot_ly(prediction_grid,
x = ~Age,
y = ~HHIncomeMid,
z = ~SystolicBP,
type = "scatter3d",
mode = "lines",
color = ~HHIncomeMid,
line = list(width = 6)) %>%
layout(scene = list(
xaxis = list(title = "Age"),
yaxis = list(title = "Income Level"),
zaxis = list(title = "Predicted Systolic BP")
))
nhanes <- NHANES %>%
select(Age, Education, BPSysAve, HHIncomeMid, Race1, SurveyYr, Gender) %>%
filter(!is.na(Age), !is.na(Education), !is.na(BPSysAve), !is.na(HHIncomeMid)) %>%
mutate(Education = factor(Education, ordered = TRUE))
hist(nhanes$BPSysAve)
nhanes <- NHANES %>%
select(Age, Education, BPSysAve, HHIncomeMid, Race1, SurveyYr, Gender,  Diabetes) %>%
filter(!is.na(Age), !is.na(Education), !is.na(BPSysAve), !is.na(HHIncomeMid)) %>%
mutate(Education = factor(Education, ordered = TRUE))
hist(nhanes$BPSysAve)
nhanes <- NHANES %>%
select(Age, Education, BPSysAve, HHIncomeMid, Race1, SurveyYr, Gender, Diabetes) %>%
filter(!is.na(Age), !is.na(Education), !is.na(BPSysAve), !is.na(HHIncomeMid)) %>%
mutate(Education = factor(Education, ordered = TRUE))
hist(nhanes$BPSysAve)
#### Interaction: Race and Gender
means <- nhanes |>
group_by(Gender, Diabetes) |>
summarize(bp = mean(BPSysAve))
summary(lm(BPSysAve ~ Gender*Race1, data = nhanes))
#### Interaction: Race and Gender
means <- nhanes |>
group_by(Diabetes, Gender) |>
summarize(bp = mean(BPSysAve))
summary(lm(BPSysAve ~ Gender*Diabetes, data = nhanes))
nhanes <- NHANES %>%
select(Age, Education, BPSysAve, HHIncomeMid, Race1, SurveyYr, Gender, Diabetes, Depressed) %>%
filter(!is.na(Age), !is.na(Education), !is.na(BPSysAve), !is.na(HHIncomeMid)) %>%
mutate(Education = factor(Education, ordered = TRUE))
#### Interaction: Race and Gender
means <- nhanes |>
group_by(Gender, Depressed) |>
summarize(bp = mean(BPSysAve))
#### Interaction: Race and Gender
means <- nhanes |>
group_by(Gender, Depressed) |>
summarize(bp = mean(BPSysAve))
summary(lm(BPSysAve ~ Gender*Depressed, data = nhanes))
ggplot(data = nhanes) +
geom_point(aes(x = Age, y = Depressed, color = Gender)) +
theme_classic()
int2 <- lm(BPSysAve ~ Age + Depressed + Age*Depressed, data = nhanes)
int1 <- lm(BPSysAve ~ Age + Depressed, data = nhanes)
View(nhanes)
# Predict BP
prediction_grid$SystolicBP <- predict(int3, newdata = prediction_grid)
matrix_BP <- matrix(prediction_grid$SystolicBP, nrow = length(age_seq), ncol = length(inc_seq))
plot_ly(prediction_grid,
x = ~Age,
y = ~Depressed,
z = ~SystolicBP,
type = "scatter3d",
mode = "lines",
color = ~HHIncomeMid,
line = list(width = 6)) %>%
layout(scene = list(
xaxis = list(title = "Age"),
yaxis = list(title = "Income Level"),
zaxis = list(title = "Predicted Systolic BP")
))
################
# question 1
n = 90
phat = 0.66
p0 = 0.5
se = sqrt(p0 * (1 - p0) / n)
z = (phat - p0) / se
z = (phat - p0) / se
zcrit = qnorm(1 - alpha)
zcrit = qnorm(1 - alpha)
zcrit = qnorm(1 - alpha)
alpha = 0.05
zcrit = qnorm(1 - alpha)
# question 2
p0 = 0.65
se = sqrt(p0 * (1 - p0) / n)
z = (phat - p0) / se
zcrit = qnorm(1 - alpha)
# part 3
p0 = 0.6
alpha = 0.01
se = sqrt(p0 * (1 - p0) / n)
z = (phat - p0) / se
zcrit = qnorm(1 - alpha)
zcrit = qnorm(alpha)
zcrit = qnorm(1 - alpha)
zcrit = qnorm(1 - alpha / 2)
# two sided
zcrit = qnorm(1 - alpha / 2)
# porblem 3
n = 70
s = 37
phat = 37 / 70
p0 = 0.6
alpha = 0.05
se = sqrt(p0 * (1 - p0) / n)
z = (phat - p0) / se
zcrit = qnorm(1 - alpha)
# problem 4
total = 1000
drug_total = 470
drug_success = 47
placebo_total = 530
placebo_success = 143
alpha = 0.04
phat1 = drug_success / drug_total
phat2 = placebo_success / placebo_total
phat_difference = phat2 - phat1
phat_pooled = (drug_success + placebo_success) / (placebo_total + drug_total)
drug_total = 470
drug_success = 47
placebo_total = 530
placebo_success = 143
alpha = 0.04
phat1 = drug_success / drug_total
phat2 = placebo_success / placebo_total
phat_difference = phat2 - phat1
phat_pooled = (drug_success + placebo_success) / (placebo_total + drug_total)
se_pooled = sqrt(phat_pooled * (1 - phat_pooled) * (1 / placebo_total + 1 / drug_total))
z_statistic = ((phat1 - phat2) - 0) / se_pooled
pnorm(-1.49)
pnorm(z_statistic)
pnorm(1 -z_statistic)
pnorm(1 - z_statistic)
pnorm(z_statistic)
2 * pnorm(z_statistic)
p0 = 1/6
se = sqrt(phat * (1 - phat) / n)
# problem 5
n = 46
s = 10
p0 = 1/6
phat = s / n
se = sqrt(phat * (1 - phat) / n)
# problem 5
n = 46
s = 10
p0 = 1/6
phat = s / n
se = sqrt(p0 * (1 - p0) / n)
z = (phat - p0) / se
# problem 5
n = 46
s = 10
p0 = 1/6
phat = s / n
se = sqrt(p0 * (1 - p0) / n)
z = (phat - p0) / se
1 - z
1 - pnorm(z)
phat1 = 44 / 500
phat2 4 / 22000
phat2 = 4 / 22000
phat1 = 44 / 500
phat2 = 4 / 22000
phat1 = 44 / 500
phat2 = 4 / 22000
phat_pooled = (44 + 4) /(women + men)
# problem 6
men = 500
women = 2200
phat1 = 44 / 500
phat2 = 4 / 22000
phat_difference = phat2 - phat1
phat_pooled = (44 + 4) /(women + men)
phat_difference = phat2 - phat1
se_pooled = sqrt(phat_pooled * (1 - phat_pooled) * (1 / placebo_total + 1 / drug_total))
se_pooled = sqrt(phat_pooled * (1 - phat_pooled) * (1 / men + 1 / women))
z_statistic = ((phat1 - phat2) - 0) / se_pooled
1 - pnorm(z_statistic)
1 - pnorm(z)
phat1 = 44 / 500
phat2 = 4 / 22000
z_statistic = (phat1 - phat2) / se_pooled
se_pooled = sqrt((phat_pooled * (1 - phat_pooled)) * ((1 / men) + (1/women)))
z_statistic = (phat1 - phat2) / se_pooled
# homework 8
men = 850
women = 2550
men_s = 78
women_s = 6
se_pooled = sqrt((ppooled * (1 - ppooled)) * ((1 / men) + (1 / women))
ppooled = (men_s + women_s) / (men + women)
men_s = 78
women_s = 6
phat_difference = phat2 - phat1
ppooled = (men_s + women_s) / (men + women)
se_pooled = sqrt((ppooled * (1 - ppooled)) * ((1 / men) + (1 / women))
phat1 = men_s / men
phat2 = women_s / women
# homework 8
men = 850
women = 2550
men_s = 78
women_s = 6
phat1 = men_s / men
phat2 = women_s / women
phat_difference = phat2 - phat1
ppooled = (men_s + women_s) / (men + women)
se_pooled = sqrt((ppooled * (1 - ppooled)) * ((1 / men) + (1 / women))
se_pooled = sqrt((ppooled * (1 - ppooled)) * ((1 / men) + (1 / women)))
ppooled = (men_s + women_s) / (men + women)
se_pooled = sqrt((ppooled * (1 - ppooled)) * ((1 / men) + (1 / women)))
z = (phat1 - phat2) / se_pooled
1 - pnorm(z)
pnorm(z)
phat_difference = phat2 - phat1
phat_difference = phat1 - phat2
phat_difference * se_pooled
phat_difference * z
phat_difference * se_pooled
phat_difference * ppooled
zcrit = qnorm(0.01)
zcrit = qnorm(1 -0.01)
zcrit = qnorm((1 -0.01) /2)
zcrit = qnorm(0.01 /2)
# two tailed so you divide it in 2
zcrit = qnorm(0.995 /2)
# two tailed so you divide it in 2
zcrit = qnorm(0.995)
# two tailed so you divide it in 2
alpha = 0.01
alpha = alpha / 2
zcrit = qnorm(1 - alpha)
# calculating MOE
moe = zcrit * phat_difference
# calculating SE
result_phat1 = (phat1 * (1 - phat1) / men)
result_phat2 = (phat2 * (1 - phat2) / women)
sqrt(result_phat1 + result_phat2)
se = sqrt(result_phat1 + result_phat2)
# calculating MOE
moe = se * zcrit
# confidence interval
lower = (phat1 - phat2) + moe
upper = (phat1 -phat2) - moe
# confidence interval
lower = (phat1 - phat2) - moe
upper = (phat1 -phat2) + moe
conventional = 2500
new_method = 2500
conventional_sample = 100
conventional_sample_s = 78
new_method_sample = 100
new_method_sample_s = 83
phat1 = new_method_sample_s / new_method_sample
phat2 = conventional_sample_s / conventional_sample
conventional = 2500
new_method = 2500
conventional_sample = 100
conventional_sample_s = 78
new_method_sample = 100
new_method_sample_s = 83
phat1 = new_method_sample_s / new_method_sample
phat2 = conventional_sample_s / conventional_sample
result_phat1 = sqrt(phat1 * (1 -phat1) / new_method_sample)
result_phat2 = sqrt(phat2 * (1 -phat2) / conventional_sample)
se = sqrt(result_phat1 + result_phat2)
alpha = 0.05 / 2
zcrit = qnorm(1 - alpha)
moe = se * zcrit
lower = (phat1 - phat2) - moe
upper = (phat1 - phat2) + moe
library(tidyverse)
library(ggplot2)
setwd("/Users/davidsosa/Code/school/regression-analysis/notes/april10")
# Load data
unemp <- read_excel("G:/My Drive/Teaching/2025_Spring_ECON_355_Regression/minwage_unemp.xlsx")
# Load data
unemp <- read_excel("minwage_unemp.xlsx")
minwage <- read_excel("minwage_unemp.xlsx", sheet = 2)
setwd("/Users/davidsosa/Code/school/regression-analysis/notes/apri10")
setwd("/Users/davidsosa/Code/school/regression-analysis/notes/april10")
# Load data
unemp <- read_excel("minwage_unemp.xlsx")
# Load data
unemp <- readxl:read_excel("minwage_unemp.xlsx")
library(readxl)
# Load data
unemp <- read_excel("minwage_unemp.xlsx")
minwage <- read_excel("minwage_unemp.xlsx", sheet = 2)
library(tidyverse)
library(ggplot2)
library(readxl)
setwd("/Users/davidsosa/Code/school/regression-analysis/notes/april10")
# Load data
unemp <- read_excel("minwage_unemp.xlsx")
minwage <- read_excel("minwage_unemp.xlsx", sheet = 2)
unemp <- unemp |>
pivot_longer(cols = -c(Fips, Area),
names_to = "year",
values_to = "unemp") |>
mutate(fips = as.numeric(substr(Fips, start = 1, stop = 2))) |>
inner_join(minwage |> janitor::clean_names(), by = c("year", "fips" = "state_fips_code"))
# Normal OLS
ols <- lm(unemp ~ annual_state_average, data = unemp)
summary(ols)
# Year FE
yearFE <- lm(unemp ~ annual_state_average + year, data = unemp)
summary(yearFE)
# Two Way FE
TWFE <- lm(unemp ~ annual_state_average + year + name, data = unemp)
summary(TWFE)
plot_data <- data.frame(years = 1981:2016, year_coefs = as.numeric(TWFE$coefficients[3:38]))
ggplot(plot_data) +
geom_line(aes(x = years, y = year_coefs)) +
theme_classic()
View(minwage)
# Normal OLS
ols <- lm(unemp ~ annual_state_average, data = unemp)
summary(ols)
# Year FE
yearFE <- lm(unemp ~ annual_state_average + year, data = unemp)
summary(yearFE)
# Year FE
yearFE <- lm(unemp ~ annual_state_average + year, data = unemp)
summary(yearFE)
# Two Way FE
TWFE <- lm(unemp ~ annual_state_average + year + name, data = unemp)
summary(TWFE)
setwd("/Users/davidsosa/Code/school/regression-analysis/labs/lab8/data")
