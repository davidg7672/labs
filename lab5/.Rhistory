qqnorm(sim_norm)
qqline(sim_norm)
# exercise 5
# Compute mean and standard deviation for McDonald's calories
mcmean <- mean(mcdonalds$calories, na.rm = TRUE)
mcsd <- sd(mcdonalds$calories, na.rm = TRUE)
# Histogram with Normal Curve Overlay
ggplot(data=mcdonalds, aes(x=calories)) +
geom_histogram(binwidth=50, aes(y=..density..), fill="lightblue", color="black") +
stat_function(fun = dnorm, args = list(mean = mcmean, sd = mcsd), col = "blue", size = 1) +
ggtitle("McDonald's: Calories with Normal Curve") +
theme_minimal()
# Q-Q Plot for McDonald's Calories
qqnorm(mcdonalds$calories, main="Q-Q Plot for McDonald's Calories")
# exercise 5
# Compute mean and standard deviation for McDonald's calories
mcmean <- mean(mcdonalds$calories, na.rm = TRUE)
mcsd <- sd(mcdonalds$calories, na.rm = TRUE)
# Histogram with Normal Curve Overlay
ggplot(data=mcdonalds, aes(x=calories)) +
geom_histogram(binwidth=50, aes(y=..density..), fill="lightblue", color="black") +
stat_function(fun = dnorm, args = list(mean = mcmean, sd = mcsd), col = "blue", size = 1) +
ggtitle("McDonald's: Calories with Normal Curve") +
theme_minimal()
# Histogram with Normal Curve Overlay
ggplot(data=mcdonalds, aes(x=calories)) +
geom_histogram(binwidth=50, aes(y=..density..), fill="lightblue", color="black") +
stat_function(fun = dnorm, args = list(mean = mcmean, sd = mcsd), col = "blue", size = 1) +
ggtitle("McDonald's: Calories with Normal Curve") +
# Q-Q Plot for McDonald's Calories
qqnorm(mcdonalds$calories, main="Q-Q Plot for McDonald's Calories")
qqline(mcdonalds$calories, col="red", lwd=2)
qqline(mcdonalds$calories, col="black", lwd=2)
# Histogram with Normal Curve Overlay
ggplot(data=mcdonalds, aes(x=calories)) +
geom_histogram(binwidth=50, aes(y=..density..), fill="lightblue", color="black") +
stat_function(fun = dnorm, args = list(mean = mcmean, sd = mcsd), col = "blue", size = 1) +
ggtitle("McDonald's: Calories with Normal Curve") +
# Q-Q Plot for McDonald's Calories
qqnorm(mcdonalds$calories, main="Q-Q Plot for McDonald's Calories")
qqline(mcdonalds$calories, col="black", lwd=2)
# exercise 6
# Theoretical Probability
pnorm(q = 1000, mean = mean(mcdonalds$sodium, na.rm = TRUE), sd = sd(mcdonalds$sodium, na.rm = TRUE), lower.tail = FALSE)
# exercise 6
# Theoretical Probability
pnorm(q = 1000, mean = mean(mcdonalds$sodium, na.rm = TRUE), sd = sd(mcdonalds$sodium, na.rm = TRUE), lower.tail = FALSE)
# Empirical Probability
sum(mcdonalds$sodium > 1000, na.rm = TRUE) / length(mcdonalds$sodium)
# Theoretical Probability
pnorm(30, mean = mean(dairyqueen$protein, na.rm = TRUE), sd = sd(dairyqueen$protein, na.rm = TRUE)) -
pnorm(20, mean = mean(dairyqueen$protein, na.rm = TRUE), sd = sd(dairyqueen$protein, na.rm = TRUE))
# Empirical Probability
sum(dairyqueen$protein >= 20 & dairyqueen$protein <= 30, na.rm = TRUE) / length(dairyqueen$protein)
# Theoretical Probability
pnorm(100, mean = mean(dairyqueen$cholesterol, na.rm = TRUE), sd = sd(dairyqueen$cholesterol, na.rm = TRUE))
# Empirical Probability
sum(dairyqueen$cholesterol < 100, na.rm = TRUE) / length(dairyqueen$cholesterol)
dnbinom(10, 3, 0.15)
dnbinom(10, 3, 0.15)
dpois(4, 5)
setwd("/Users/davidsosa/Code/school/regression-analysis/labs/lab5")
rm(list = ls())
library(tidyverse)
library(ggplot2)
pop <- read.csv("data/population_by_country.csv")
gdp <- read.csv("data/gdp_by_country.csv")
pop <- pop[pop$Year > 1989, ]
pop <- filter(pop, Year > 1989)
pop <- pop |>
filter(Year > 1989)
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = TRUE
)
gdp <- gdp |>
mutate(Year = as.numeric(Year))
View(pop)
View(gdp)
View(gdp)
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = TRUE
)
gdp <- read.csv("data/gdp_by_country.csv")
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = TRUE
)
View(gdp)
gdp <- read.csv("data/gdp_by_country.csv")
View(gdp)
gdp <- gdp \>
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = True
)
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = True
)
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = TRUE
)
View(gdp)
View(pop)
gdp <- gdp |>
mutate(Year = as.numeric(Year))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "ios3_code"))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "ios3_code"))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "iso3_code"))
year_data <- world |>
group_by(Year) |>
summarize(n_countries = n(),
avg_le = mean(as.numeric(life_exp_total)))
View(year_data)
year_data[year_data$Year > 2019,]
ggplot(data = year_data) +
geom_line(aes(x = Year, y = avg_le)) +
xlab("Year") +
ylab("Average Life Exp") +
theme_classic() +
labs(alt = "A line graph with year on the x axis and life expectancy on the y axis. Years range from 1990 to 2023, and the average life expecatancy increases from about 65 to about 73, with a dip around 2020.") # It's a good idea to add alternative text for visually impaired users!
View(gdp)
gdp <- gdp |>
mutate(Life Expectancy Total = as.numeric(life_exp_totafl))
gdp <- gdp |>
mutate(life_exp_total = as.numeric(life_exp_total))
# exercises
gdp <- gdp |>
mutate(life_exp_total = as.numeric(life_exp_total))
setwd("/Users/davidsosa/Code/school/regression-analysis/labs/lab5")
rm(list = ls())
library(tidyverse)
library(ggplot2)
pop <- read.csv("data/population_by_country.csv")
gdp <- read.csv("data/gdp_by_country.csv")
pop <- pop[pop$Year > 1989, ]
pop <- filter(pop, Year > 1989)
pop <- pop |>
filter(Year > 1989)
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = TRUE
)
gdp <- gdp |>
mutate(Year = as.numeric(Year))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "iso3_code"))
year_data <- world |>
group_by(Year) |>
summarize(n_countries = n(),
avg_le = mean(as.numeric(life_exp_total)))
year_data[year_data$Year > 2019,]
ggplot(data = year_data) +
geom_line(aes(x = Year, y = avg_le)) +
xlab("Year") +
ylab("Average Life Exp") +
theme_classic() +
labs(alt = "A line graph with year on the x axis and life expectancy on the y axis. Years range from 1990 to 2023, and the average life expecatancy increases from about 65 to about 73, with a dip around 2020.") # It's a good idea to add alternative text for visually impaired users!
# exercises
gdp <- gdp |>
mutate(life_exp_total = as.numeric(life_exp_total))
gdp <- read.csv("data/gdp_by_country.csv")
gdp <- gdp |>
mutate(Year = as.numeric(Year))
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = TRUE
)
gdp <- gdp |>
mutate(Year = as.numeric(Year))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "iso3_code"))
View(world)
# exercises
world <- world |>
mutate(life_exp_total = as.numeric(life_exp_total))
pop <- pop |> mutate(total_pop = as.numeric(total_pop))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "ios3_code"))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "iso3_code"))
View(world)
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "iso3_code"))
world_2021 <- world | filter(Year == 2022)
setwd("/Users/davidsosa/Code/school/regression-analysis/labs/lab5")
rm(list = ls())
library(tidyverse)
library(ggplot2)
pop <- read.csv("data/population_by_country.csv")
gdp <- read.csv("data/gdp_by_country.csv")
pop <- pop[pop$Year > 1989, ]
pop <- filter(pop, Year > 1989)
pop <- pop |>
filter(Year > 1989)
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = TRUE
)
gdp <- gdp |>
mutate(Year = as.numeric(Year))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "iso3_code"))
year_data <- world |>
group_by(Year) |>
summarize(n_countries = n(),
avg_le = mean(as.numeric(life_exp_total)))
year_data[year_data$Year > 2019,]
ggplot(data = year_data) +
geom_line(aes(x = Year, y = avg_le)) +
xlab("Year") +
ylab("Average Life Exp") +
theme_classic() +
labs(alt = "A line graph with year on the x axis and life expectancy on the y axis. Years range from 1990 to 2023, and the average life expecatancy increases from about 65 to about 73, with a dip around 2020.") # It's a good idea to add alternative text for visually impaired users!
# exercises
world <- world |>
mutate(life_exp_total = as.numeric(life_exp_total))
pop <- pop |>
mutate(total_pop = as.numeric(total_pop))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "iso3_code"))
world_2021 <- world | filter(Year == 2022)
world_2021 <- world |> filter(Year == 2021)
contient_summary <- world_2021 |>
group_by(Continent) |>
summarize(
avg_life_exp = mean(life_exp_total),
avg_gdp_per_cap = mean(GDP_per_cap),
total_pop = sum(total_pop)
)
contient_summary <- world_2021 |>
group_by(Continent) |>
summarize(
avg_life_exp = mean(life_exp_total),
avg_gdp_per_cap = mean(GDP_per_cap),
total_pop = sum(total_pop)
)
contient_summary <- world_2021 |>
group_by(Continent) |>
summarize(
avg_life_exp = mean(life_exp_total, na.rm = TRUE),
avg_gdp_per_cap = mean(GDP_per_cap),
total_pop = sum(total_pop)
)
contient_summary <- world_2021 |>
group_by(Continent) |>
summarize(
avg_life_exp = mean(life_exp_total, na.rm = TRUE),
avg_gdp_per_cap = mean(GDP_per_cap, na.rm = TRUE),
total_pop = sum(total_pop, na.rm = TRUE)
)
continent_summary <- world_2021 |>
group_by(Continent) |>
summarize(
avg_life_exp = mean(life_exp_total, na.rm = TRUE),
avg_gdp_per_cap = mean(GDP_per_cap, na.rm = TRUE),
total_population = sum(total_pop, na.rm = TRUE)
)
continent_summary <- world_2021 |>
group_by(Continent) |>
summarize(
avg_life_exp = mean(as.numeric(life_exp_total), na.rm = TRUE),
avg_gdp_per_cap = mean(GDP_per_cap, na.rm = TRUE),
total_population = sum(total_pop, na.rm = TRUE)
)
world_2021 <- world_2021 |> mutate(log_gdp = log(GDP_per_cap))
ggplot(world_2021, aes(x = log_gdp, y = life_exp_total)) +
ggpoint(alpht = 0.7) +
xlab()
ggplot(world_2021, aes(x = log_gdp, y = life_exp_total)) +
ggpoint(alpht = 0.7) +
xlab("Log GDP") +
ylab("Life Expectancy") +
theme_minimal() +
labs(size = "Total Population", color = "Continent") +
ggtitle("Life Exp vs. GDP Per Cap")
ggplot(world_2021, aes(x = log_gdp, y = life_exp_total)) +
ggpoint(alpha = 0.7) +
xlab("Log GDP") +
ylab("Life Expectancy") +
theme_minimal() +
labs(size = "Total Population", color = "Continent") +
ggtitle("Life Exp vs. GDP Per Cap")
ggplot(world_2021, aes(x = log_gdp, y = life_exp_total)) +
geom_point(alpha = 0.7) +
xlab("Log GDP") +
ylab("Life Expectancy") +
theme_minimal() +
labs(size = "Total Population", color = "Continent") +
ggtitle("Life Exp vs. GDP Per Cap")
ggplot(world_2021, aes(x = life_exp_total, y = log_gdp)) +
geom_point(alpha = 0.7) +
xlab("Log GDP") +
ylab("Life Expectancy") +
theme_minimal() +
labs(size = "Total Population", color = "Continent") +
ggtitle("Life Exp vs. GDP Per Cap")
ggplot(data = world_2021, aes(x = log_gdp, y = life_exp_total, color = Continent, size = total_pop)) +
geom_point(alpha = 0.7) +
xlab("Log of GDP per Capita") +
ylab("Life Expectancy") +
theme_minimal() +
labs(size = "Total Population", color = "Continent") +
ggtitle("Life Expectancy vs. Log GDP per Capita (2021)")
setwd("/Users/davidsosa/Code/school/regression-analysis/labs/lab5")
rm(list = ls())
library(tidyverse)
library(ggplot2)
pop <- read.csv("data/population_by_country.csv")
gdp <- read.csv("data/gdp_by_country.csv")
pop <- pop[pop$Year > 1989, ]
pop <- filter(pop, Year > 1989)
pop <- pop |>
filter(Year > 1989)
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = TRUE
)
gdp <- gdp |>
mutate(Year = as.numeric(Year))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "iso3_code"))
year_data <- world |>
group_by(Year) |>
summarize(n_countries = n(),
avg_le = mean(as.numeric(life_exp_total)))
year_data[year_data$Year > 2019,]
ggplot(data = year_data) +
geom_line(aes(x = Year, y = avg_le)) +
xlab("Year") +
ylab("Average Life Exp") +
theme_classic() +
labs(alt = "A line graph with year on the x axis and life expectancy on the y axis. Years range from 1990 to 2023, and the average life expecatancy increases from about 65 to about 73, with a dip around 2020.") # It's a good idea to add alternative text for visually impaired users!
# exercises
world <- world |>
mutate(life_exp_total = as.numeric(life_exp_total))
pop <- pop |>
mutate(total_pop = as.numeric(total_pop))
world <- merge(gdp, pop, by.x = c("Year", "Country.Code"), by.y = c("Year", "iso3_code"))
world_2021 <- world |> filter(Year == 2021)
continent_summary <- world_2021 |>
group_by(Continent) |>
summarize(
avg_life_exp = mean(as.numeric(life_exp_total), na.rm = TRUE),
avg_gdp_per_cap = mean(GDP_per_cap, na.rm = TRUE),
total_population = sum(total_pop, na.rm = TRUE)
)
world_2021 <- world_2021 |> mutate(log_gdp = log(GDP_per_cap))
ggplot(data = world_2021, aes(x = log_gdp, y = life_exp_total, color = Continent, size = total_pop)) +
geom_point(alpha = 0.7) +
xlab("Log of GDP per Capita") +
ylab("Life Expectancy") +
theme_minimal() +
labs(size = "Total Population", color = "Continent") +
ggtitle("Life Expectancy vs. Log GDP per Capita (2021)")
fertility_life_correlation <- cor(world_2021$fertility_rate, world_2021$life_exp_total, use="complete.obs")
fertility_life_correlation <- cor(as.numeric(world_2021$fertility_rate), world_2021$life_exp_total, use="complete.obs")
fertility_life_correlation <- cor(as.numeric(world_2021$fertility_rate), as.numeric(world_2021$life_exp_total), use="complete.obs")
print(paste("Correlation between fertility rate and life expectancy: ", round(fertility_life_corr, 3)))
print(paste("Correlation between fertility rate and life expectancy: ", round(fertility_life_corrlation, 3)))
print(paste("Correlation between fertility rate and life expectancy: ", round(fertility_life_correlation, 3)))
pop <- read.csv("data/population_by_country.csv")
gdp <- read.csv("data/gdp_by_country.csv")
View(world)
result <- pop|>
filter(Year == 2023)
result <- gdl |>
filter(Year == 2023)
result <- gdp |>
filter(Year == 2023)
result <- gdp |>
filter(as.numeric(Year) == 2023)
gdp <- gdp |>
pivot_longer(
cols = starts_with("X"),
names_to = "Year",
names_prefix = "X",
values_to = "GDP_per_cap",
values_drop_na = TRUE
)
View(gdp)
View(gdp)
gdp <- gdp |>
mutate(Year = as.numeric(Year))
result <- gdp |>
filter(as.numeric(Year) == 2023)
View(result)
View(result)
result <- gdp[gdp$Year == 2023]
result <- gdp[gdp$Year == 2023,]
View(result)
result <- pop[pop$Year == 2023,]
# exercises
world <- world |>
mutate(life_exp_total = as.numeric(life_exp_total))
world_2021$life_exp_total[world$Continent == "Africa"]
mean(world_2021$life_exp_total[world$Continent == "Africa"])
mean(as.numeric(world_2021$life_exp_total[world$Continent == "Africa"]))
mean(as.numeric(world_2021$life_exp_total[world_2021$Continent == "Africa"]))
View(continent_summary)
View(world_2021)
gdp_correlation <- cor(as.numeric(world_2021$med_age), as.numeric(world_2021$log_gdp))
ggplot(data = world_2021, aes(x = log_gdp, y = med_age, color = Continent, size = total_pop)) +
geom_point(alpha = 0.7) +
xlab("Logged GDP") +
ylab("Median Age") +
theme_minimal() +
labs(size = "Mean Age", color = "Continent") +
ggtitle("Median Age vs vs Logged GDP Per Capita")
View(world_2021)
ggplot(data = world_2021, aes(x = log_gdp, y = med_age, color = Continent)) +
geom_point(alpha = 0.7) +
xlab("Logged GDP") +
ylab("Median Age") +
theme_minimal() +
labs(size = "Mean Age", color = "Continent") +
ggtitle("Median Age vs vs Logged GDP Per Capita")
ggplot(data = world_2021, aes(x = log_gdp, y = med_age, color = Continent)) +
geom_point() +
xlab("Logged GDP") +
ylab("Median Age") +
theme_minimal() +
labs(size = "Mean Age", color = "Continent") +
ggtitle("Median Age vs vs Logged GDP Per Capita")
ggplot(data = world_2021, aes(x = log_gdp, y = med_age, color = Continent)) +
geom_point() +
xlab("Logged GDP") +
ylab("Median Age") +
theme_minimal() +
labs(size = , color = "Continent") +
ggtitle("Median Age vs vs Logged GDP Per Capita")
ggplot(data = world_2021, aes(x = log_gdp, y = med_age, color = Continent)) +
geom_point() +
xlab("Logged GDP") +
ylab("Median Age") +
theme_minimal() +
ggtitle("Median Age vs vs Logged GDP Per Capita")
ggplot(data = world_2021, aes(x = log_gdp, y = med_age, color = Continent)) +
geom_point() +
xlab("Logged GDP") +
ylab("Median Age") +
theme_minimal() +
ggtitle("Median Age vs vs Logged GDP Per Capita")
ggplot(data = world_2021, aes(x = log_gdp, y = med_age, color = Continent, size = total_pop)) +
geom_point() +
xlab("Logged GDP") +
ylab("Median Age") +
theme_minimal() +
ggtitle("Median Age vs vs Logged GDP Per Capita")
ggplot(data = world_2021, aes(x = log_gdp, y = med_age, color = Continent, size = total_pop)) +
geom_point() +
xlab("Logged GDP") +
ylab("Median Age") +
theme_minimal() +
ggtitle("Median Age vs vs Logged GDP Per Capita")
ggplot(data = world_2021, aes(x = log_gdp, y = as.numeric(med_age), color = Continent, size = total_pop)) +
geom_point() +
xlab("Logged GDP") +
ylab("Median Age") +
theme_minimal() +
ggtitle("Median Age vs vs Logged GDP Per Capita")
ggplot(data = world_2021, aes(x = log_gdp, y = as.numeric(life_exp_total), color = Continent, size = total_pop)) +
geom_point(alpha = 0.7) +
xlab("Log of GDP per Capita") +
ylab("Life Expectancy") +
theme_minimal() +
labs(size = "Total Population", color = "Continent") +
ggtitle("Life Expectancy vs. Log GDP per Capita (2021)")
ggplot(data = world_2021, aes(x = log_gdp, y = as.numeric(med_age), color = Continent, size = total_pop)) +
geom_point() +
xlab("Logged GDP") +
ylab("Median Age") +
theme_minimal() +
ggtitle("Median Age vs vs Logged GDP Per Capita")
world_2023 <- world |> filter(Year == 2023)
View(world_2021)
View(continent_summary)
